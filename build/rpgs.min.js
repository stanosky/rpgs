(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("rpgs", [], factory);
	else if(typeof exports === 'object')
		exports["rpgs"] = factory();
	else
		root["rpgs"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	  BaseNode: __webpack_require__(1),
	  CompoundNode: __webpack_require__(7),
	  Connector: __webpack_require__(5),
	  ConnectorManager: __webpack_require__(4),
	  ErrorCode: __webpack_require__(8),
	  ErrorHandler: __webpack_require__(9),
	  ParamsManager: __webpack_require__(6),
	  Plug: __webpack_require__(3),
	  Utils: __webpack_require__(2),
	  AnswerNode: __webpack_require__(10),
	  DialogNode: __webpack_require__(11),
	  DialogWalker: __webpack_require__(12),
	  TalkNode: __webpack_require__(13),
	  RPGSystem: __webpack_require__(14)
	};

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _Utils = __webpack_require__(2);
	
	var _Utils2 = _interopRequireDefault(_Utils);
	
	var _Plug = __webpack_require__(3);
	
	var _Plug2 = _interopRequireDefault(_Plug);
	
	var _ConnectorManager = __webpack_require__(4);
	
	var _ConnectorManager2 = _interopRequireDefault(_ConnectorManager);
	
	var _ParamsManager = __webpack_require__(6);
	
	var _ParamsManager2 = _interopRequireDefault(_ParamsManager);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var BaseNode = function () {
	
	  // Weak maps are new feature to JavaScript. We can store private
	  // object properties in key/value pairs using our instance as the key,
	  // and our class can capture those key/value maps in a closure.
	  var _uuid = new WeakMap();
	  var _label = new WeakMap();
	  var _x = new WeakMap();
	  var _y = new WeakMap();
	
	  /* function executeScript(rpgs, scriptId) {
	    let _script = rpgs.findNode(scriptId);
	      return _script !== null && _script.execute ? _script.execute({rpgs: rpgs}) : true;
	  }*/
	
	  return function () {
	    function BaseNode(nodePool, data) {
	      _classCallCheck(this, BaseNode);
	
	      var _data = data || {};
	
	      // console.log('BaseNode', nodePool);
	      // If uuid not present, then by default we assign Universally Unique ID.
	      _uuid.set(this, _data.uuid ? _data.uuid : _get__('Utils').getUUID());
	      _label.set(this, _data.label ? _data.label : '');
	      _x.set(this, _data.x ? _data.x : 0);
	      _y.set(this, _data.y ? _data.y : 0);
	      this.nodePool = nodePool;
	      this.pm = new (_get__('ParamsManager'))(_data.params || {});
	      this.cm = new (_get__('ConnectorManager'))();
	      this._init();
	      this.cm.setData(_data);
	    }
	
	    _createClass(BaseNode, [{
	      key: '_init',
	      value: function _init() {
	        this.cm.addConnector(_get__('Plug').VISIBLE, 1);
	        this.cm.addConnector(_get__('Plug').ENABLED, 1);
	      }
	    }, {
	      key: 'addParam',
	      value: function addParam(name, type, value) {
	        this.pm.addParam(name, type, value);
	      }
	    }, {
	      key: 'getParam',
	      value: function getParam(name) {
	        return this.pm.getParamValue(name);
	      }
	    }, {
	      key: 'setParam',
	      value: function setParam(name, value) {
	        this.pm.setParamValue(name, value);
	      }
	    }, {
	      key: 'removeParam',
	      value: function removeParam(name) {
	        this.pm.removeParam(name);
	      }
	    }, {
	      key: 'setId',
	      value: function setId(value) {
	        _uuid.set(this, value);
	      }
	    }, {
	      key: 'getId',
	      value: function getId() {
	        return _uuid.get(this);
	      }
	    }, {
	      key: 'setLabel',
	      value: function setLabel(value) {
	        _label.set(this, value);
	      }
	    }, {
	      key: 'getLabel',
	      value: function getLabel() {
	        return _label.get(this);
	      }
	    }, {
	      key: 'isVisible',
	
	
	      /**
	       * Returns visibility state.
	       * @return {boolean} Visibility state
	       */
	      value: function isVisible() {
	        return true; // executeScript(this.rpgs, this.cm.getWires(Plug.VISIBLE)[0]);
	      }
	
	      /**
	       * Returns activity state.
	       * @return {boolean} Active state
	       */
	
	    }, {
	      key: 'isActive',
	      value: function isActive() {
	        return true; // executeScript(this.rpgs, this.cm.getWires(Plug.ENABLED)[0]);
	      }
	    }, {
	      key: 'getData',
	      value: function getData() {
	        return {
	          class: this.constructor.name,
	          uuid: this.getId(),
	          label: this.getLabel(),
	          wires: this.cm.getData(),
	          params: this.pm.getParams(),
	          x: this.x,
	          y: this.y
	        };
	      }
	    }, {
	      key: 'canAddChild',
	      value: function canAddChild(type) {
	        // false because cannot have children
	        return false;
	      }
	    }, {
	      key: 'addChild',
	      value: function addChild(childId) {
	        // empty because cannot have children
	      }
	    }, {
	      key: 'removeChild',
	      value: function removeChild(index) {
	        // empty because cannot have children
	      }
	    }, {
	      key: 'getChild',
	      value: function getChild(index) {
	        // null because cannot have children
	        return null;
	      }
	    }, {
	      key: 'getChildren',
	      value: function getChildren() {
	        // empty array because cannot have children
	        return [];
	      }
	    }, {
	      key: 'canBeWiredTo',
	      value: function canBeWiredTo(type) {
	        return false;
	      }
	    }, {
	      key: 'canRecieveWire',
	      value: function canRecieveWire(type) {
	        return this.cm.canRecieveWire(type);
	      }
	    }, {
	      key: 'addWire',
	      value: function addWire(type, nodeId) {
	        this.cm.addWire(type, nodeId);
	      }
	    }, {
	      key: 'getWires',
	      value: function getWires(type) {
	        return this.cm.getWires(type);
	      }
	    }, {
	      key: 'removeWire',
	      value: function removeWire(type, nodeId) {
	        this.cm.removeWire(type, nodeId);
	      }
	    }, {
	      key: 'dispose',
	      value: function dispose() {
	        // console.log('dispose from BaseNode');
	        this.cm.dispose();
	        this.pm.dispose();
	        this.cm = null;
	        this.pm = null;
	        this.nodePool = null;
	        _uuid.delete(this);
	        _label.delete(this);
	        _x.delete(this);
	        _y.delete(this);
	      }
	    }, {
	      key: 'x',
	      set: function set(value) {
	        _x.set(this, value);
	      },
	      get: function get() {
	        return _x.get(this);
	      }
	    }, {
	      key: 'y',
	      set: function set(value) {
	        _y.set(this, value);
	      },
	      get: function get() {
	        return _y.get(this);
	      }
	    }]);
	
	    return BaseNode;
	  }();
	}();
	
	module.exports = _get__('BaseNode');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'Utils':
	      return _Utils2.default;

	    case 'ParamsManager':
	      return _ParamsManager2.default;

	    case 'ConnectorManager':
	      return _ConnectorManager2.default;

	    case 'Plug':
	      return _Plug2.default;

	    case 'BaseNode':
	      return BaseNode;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 2 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Fast UUID generator, RFC4122 version 4 compliant.
	 * @author Jeff Ward (jcward.com).
	 * @license MIT license
	 * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136
	 **/
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var UUID = function () {
	  var self = {};
	  var lut = [];
	  var i;
	
	  for (i = 0; i < 256; i++) {
	    lut[i] = (i < 16 ? '0' : '') + i.toString(16);
	  }
	
	  self.generate = function () {
	    var d0 = Math.random() * 0xffffffff | 0;
	    var d1 = Math.random() * 0xffffffff | 0;
	    var d2 = Math.random() * 0xffffffff | 0;
	    var d3 = Math.random() * 0xffffffff | 0;
	
	    return lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' + lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' + lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] + lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff];
	  };
	
	  return self;
	}();
	
	exports.getUUID = _get__('UUID').generate;
	
	var indexOfObject = function indexOfObject(array, obj) {
	  var i;
	
	  for (i = 0; i < array.length; i++) {
	    if (array[i] === obj) return i;
	  }
	  return -1;
	};
	
	exports.indexOfObject = _get__('indexOfObject');
	
	var getIndexById = function getIndexById(array, id) {
	  var i;
	
	  for (i = 0; i < array.length; i++) {
	    if (array[i].getId() === id) return i;
	  }
	  return -1;
	};
	
	exports.getIndexById = _get__('getIndexById');
	
	exports.addObjectToArray = function (array, obj) {
	  if (_get__('indexOfObject')(array, obj) === -1) {
	    array.push(obj);
	  }
	  return array;
	};
	
	exports.removeObjectFromArray = function (array, obj) {
	  var index = _get__('indexOfObject')(array, obj);
	
	  if (index !== -1) {
	    var spliced = array.splice(index, 1);
	
	    if (spliced.dispose) spliced.dispose();
	  }
	  return array;
	};
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'UUID':
	      return UUID;

	    case 'indexOfObject':
	      return indexOfObject;

	    case 'getIndexById':
	      return getIndexById;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 3 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var VISIBLE = 'visible';
	var ENABLED = 'enabled';
	var GOTO = 'goto';
	
	exports.VISIBLE = _get__('VISIBLE');
	exports.ENABLED = _get__('ENABLED');
	exports.GOTO = _get__('GOTO');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'VISIBLE':
	      return VISIBLE;

	    case 'ENABLED':
	      return ENABLED;

	    case 'GOTO':
	      return GOTO;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _Connector = __webpack_require__(5);
	
	var _Connector2 = _interopRequireDefault(_Connector);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ConnectorManager = function () {
	
	  var _connectors = new WeakMap();
	
	  return function () {
	    function ConnectorManager() {
	      _classCallCheck(this, ConnectorManager);
	
	      _connectors.set(this, []);
	    }
	
	    _createClass(ConnectorManager, [{
	      key: 'setData',
	      value: function setData(data) {
	        var wires = data.wires || {};
	        var parsed = [];
	        var connector = void 0,
	            nodes = void 0;
	
	        for (var type in wires) {
	          if (wires.hasOwnProperty(type)) {
	            connector = this.getConnector(type);
	            if (connector !== null) {
	              nodes = wires[type];
	              nodes.map(function (n) {
	                return connector.addWire(n);
	              });
	              parsed.push(connector);
	            }
	          }
	        }
	        return parsed;
	      }
	    }, {
	      key: 'addConnector',
	      value: function addConnector(type, limit) {
	        var connectors = _connectors.get(this);
	        var alreadyExist = connectors.filter(function (c) {
	          return c.getType() === type;
	        }).length > 0;
	
	        if (!alreadyExist) {
	          connectors.push(new (_get__('Connector'))(type, limit));
	          _connectors.set(this, connectors);
	        }
	      }
	    }, {
	      key: 'getConnector',
	      value: function getConnector(type) {
	        var connectors = _connectors.get(this) || null;
	        var connector = null;
	
	        if (connectors !== null) {
	          connector = connectors.filter(function (c) {
	            return c.getType() === type;
	          });
	        }
	        return connector !== null && connector.length > 0 ? connector[0] : null;
	      }
	    }, {
	      key: 'canRecieveWire',
	      value: function canRecieveWire(type) {
	        var connectors = _connectors.get(this);
	
	        return connectors.filter(function (c) {
	          return c.getType() === type && c.canAddWire();
	        }).length > 0;
	      }
	    }, {
	      key: 'addWire',
	      value: function addWire(type, nodeId) {
	        var connector = this.getConnector(type);
	
	        if (connector !== null) {
	          connector.addWire(nodeId);
	        }
	      }
	    }, {
	      key: 'getWires',
	      value: function getWires(type) {
	        var connector = this.getConnector(type);
	
	        return connector !== null ? connector.getWires() : [];
	      }
	    }, {
	      key: 'removeWire',
	      value: function removeWire(type, nodeId) {
	        var connector = this.getConnector(type);
	
	        if (connector !== null) {
	          connector.removeWire(nodeId);
	        }
	      }
	    }, {
	      key: 'getData',
	      value: function getData() {
	        var data = {};
	        var connectors = _connectors.get(this) || [];
	        var type = void 0,
	            nodes = void 0,
	            i = void 0;
	
	        for (i = 0; i < connectors.length; i++) {
	          type = connectors[i].getType();
	          nodes = connectors[i].getWires();
	          data[type] = nodes;
	        }
	        return data;
	      }
	    }, {
	      key: 'dispose',
	      value: function dispose() {
	        _connectors.get(this).map(function (c) {
	          c.dispose();
	        });
	        _connectors.delete(this);
	      }
	    }]);
	
	    return ConnectorManager;
	  }();
	}();
	
	module.exports = _get__('ConnectorManager');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'Connector':
	      return _Connector2.default;

	    case 'ConnectorManager':
	      return ConnectorManager;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 5 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Connector = function () {
	  var _type = new WeakMap();
	  var _limit = new WeakMap();
	  var _wires = new WeakMap();
	
	  return function () {
	    function Connector(type, limit) {
	      _classCallCheck(this, Connector);
	
	      _type.set(this, type);
	      _limit.set(this, isNaN(parseInt(limit, 10)) ? -1 : parseInt(limit, 10));
	      _wires.set(this, []);
	    }
	
	    _createClass(Connector, [{
	      key: 'getType',
	      value: function getType() {
	        return _type.get(this);
	      }
	    }, {
	      key: 'getLimit',
	      value: function getLimit() {
	        return _limit.get(this);
	      }
	    }, {
	      key: 'getWires',
	      value: function getWires() {
	        return _wires.get(this);
	      }
	    }, {
	      key: 'canAddWire',
	      value: function canAddWire() {
	        var limit = this.getLimit();
	        var wireLen = this.getWires().length;
	
	        return limit === -1 || limit > 0 && wireLen < limit;
	      }
	    }, {
	      key: 'addWire',
	      value: function addWire(nodeId) {
	        var wire = this.getWires();
	
	        if (this.canAddWire()) {
	          wire.push(nodeId);
	          _wires.set(this, wire);
	        }
	      }
	    }, {
	      key: 'removeWire',
	      value: function removeWire(nodeId) {
	        _wires.set(this, _wires.get(this).filter(function (wire) {
	          return wire !== nodeId;
	        }));
	      }
	    }, {
	      key: 'dispose',
	      value: function dispose() {
	        _type.delete(this);
	        _limit.delete(this);
	        _wires.delete(this);
	      }
	    }]);
	
	    return Connector;
	  }();
	}();
	
	module.exports = _get__('Connector');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'Connector':
	      return Connector;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ParamsManager = function () {
	  var _params = new WeakMap();
	
	  function _paramExist(paramName, containerObj) {
	    var keys = Object.keys(containerObj);
	
	    return keys.filter(function (k) {
	      return k === paramName;
	    }).length > 0;
	  }
	
	  function _addParam(paramName, paramType, paramValue, containerObj, isMandatory) {
	    if (!_paramExist(paramName, containerObj)) {
	      containerObj[paramName] = {
	        type: paramType,
	        value: paramValue,
	        mand: isMandatory
	      };
	    } else {
	      // console.warn();
	    }
	    return containerObj;
	  }
	
	  return function () {
	    function ParamsManager(data) {
	      _classCallCheck(this, ParamsManager);
	
	      _params.set(this, data || {});
	    }
	
	    _createClass(ParamsManager, [{
	      key: 'addMandatoryParam',
	      value: function addMandatoryParam(name, type, value) {
	        _params.set(this, _addParam(name, type, value, _params.get(this), true));
	      }
	    }, {
	      key: 'addParam',
	      value: function addParam(name, type, value) {
	        _params.set(this, _addParam(name, type, value, _params.get(this), false));
	      }
	    }, {
	      key: 'getParam',
	      value: function getParam(name) {
	        var params = _params.get(this);
	
	        return params[name] !== undefined ? params[name] : null;
	      }
	    }, {
	      key: 'getParamValue',
	      value: function getParamValue(name) {
	        var param = this.getParam(name);
	
	        return param !== null ? param.value : null;
	      }
	    }, {
	      key: 'setParamValue',
	      value: function setParamValue(name, value) {
	        var params = _params.get(this);
	
	        if (params[name] !== undefined) params[name].value = value;
	      }
	    }, {
	      key: 'removeParam',
	      value: function removeParam(name) {
	        var param = this.getParam(name);
	        var params = _params.get(this);
	
	        if (param !== null && !param.mand) {
	          delete params[name];
	          _params.set(this, params);
	        }
	      }
	    }, {
	      key: 'getParams',
	      value: function getParams() {
	        return _params.get(this);
	      }
	    }, {
	      key: 'dispose',
	      value: function dispose() {
	        _params.delete(this);
	      }
	    }]);
	
	    return ParamsManager;
	  }();
	}();
	
	module.exports = _get__('ParamsManager');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'ParamsManager':
	      return ParamsManager;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _BaseNode = __webpack_require__(1);
	
	var _BaseNode2 = _interopRequireDefault(_BaseNode);
	
	var _Utils = __webpack_require__(2);
	
	var _Utils2 = _interopRequireDefault(_Utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var CompoundNode = function () {
	
	  var _children = new WeakMap();
	
	  return function (_get__2) {
	    _inherits(CompoundNode, _get__2);
	
	    function CompoundNode(nodePool, data) {
	      _classCallCheck(this, CompoundNode);
	
	      var _this = _possibleConstructorReturn(this, (CompoundNode.__proto__ || Object.getPrototypeOf(CompoundNode)).call(this, nodePool, data));
	
	      _children.set(_this, data && data.children ? data.children : []);
	      return _this;
	    }
	
	    _createClass(CompoundNode, [{
	      key: 'getData',
	      value: function getData() {
	        var data = _get(CompoundNode.prototype.__proto__ || Object.getPrototypeOf(CompoundNode.prototype), 'getData', this).call(this);
	
	        data.children = this.getChildren();
	        return data;
	      }
	    }, {
	      key: 'addChild',
	      value: function addChild(childId) {
	        var children = _children.get(this);
	
	        _children.set(this, _get__('Utils').addObjectToArray(children, childId));
	      }
	    }, {
	      key: 'removeChild',
	      value: function removeChild(index) {
	        var children = _children.get(this);
	
	        if (index >= 0 && index < children.length) {
	          this.nodePool.removeNode(children[index]);
	          children.splice(index, 1);
	          _children.set(this, children);
	        }
	      }
	    }, {
	      key: 'getChild',
	      value: function getChild(index) {
	        var children = _children.get(this);
	
	        return children.length > index ? children[index] : null;
	      }
	    }, {
	      key: 'getChildren',
	      value: function getChildren() {
	        return _children.get(this);
	      }
	    }, {
	      key: 'dispose',
	      value: function dispose() {
	        var _this2 = this;
	
	        // console.log('dispose from CompoundNode');
	        _children.get(this).map(function (childId) {
	          _this2.nodePool.removeNode(childId);
	        });
	        _children.delete(this);
	        _get(CompoundNode.prototype.__proto__ || Object.getPrototypeOf(CompoundNode.prototype), 'dispose', this).call(this);
	      }
	    }]);
	
	    return CompoundNode;
	  }(_get__('BaseNode'));
	}();
	
	module.exports = _get__('CompoundNode');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'Utils':
	      return _Utils2.default;

	    case 'BaseNode':
	      return _BaseNode2.default;

	    case 'CompoundNode':
	      return CompoundNode;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 8 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var NODE_NOT_EXISTS = 0;
	var CLASS_NOT_DEFINED = 1;
	var CONNECTION_TO_ITSELF = 2;
	var IMPROPER_CONNECTION = 3;
	var OBJECT_NOT_FOUND = 4;
	var MANDATORY_PARAM = 5;
	var INCORRECT_TYPE = 6;
	var INCORRECT_PARENT_NODE = 7;
	var INCORRECT_LINK_TARGET = 8;
	var INCOMPATIBLE_CHILD = 9;
	
	exports.NODE_NOT_EXISTS = _get__('NODE_NOT_EXISTS');
	exports.CLASS_NOT_DEFINED = _get__('CLASS_NOT_DEFINED');
	exports.CONNECTION_TO_ITSELF = _get__('CONNECTION_TO_ITSELF');
	exports.IMPROPER_CONNECTION = _get__('IMPROPER_CONNECTION');
	exports.OBJECT_NOT_FOUND = _get__('OBJECT_NOT_FOUND');
	exports.MANDATORY_PARAM = _get__('MANDATORY_PARAM');
	exports.INCORRECT_TYPE = _get__('INCORRECT_TYPE');
	exports.INCORRECT_PARENT_NODE = _get__('INCORRECT_PARENT_NODE');
	exports.INCORRECT_LINK_TARGET = _get__('INCORRECT_LINK_TARGET');
	exports.INCOMPATIBLE_CHILD = _get__('INCOMPATIBLE_CHILD');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'NODE_NOT_EXISTS':
	      return NODE_NOT_EXISTS;

	    case 'CLASS_NOT_DEFINED':
	      return CLASS_NOT_DEFINED;

	    case 'CONNECTION_TO_ITSELF':
	      return CONNECTION_TO_ITSELF;

	    case 'IMPROPER_CONNECTION':
	      return IMPROPER_CONNECTION;

	    case 'OBJECT_NOT_FOUND':
	      return OBJECT_NOT_FOUND;

	    case 'MANDATORY_PARAM':
	      return MANDATORY_PARAM;

	    case 'INCORRECT_TYPE':
	      return INCORRECT_TYPE;

	    case 'INCORRECT_PARENT_NODE':
	      return INCORRECT_PARENT_NODE;

	    case 'INCORRECT_LINK_TARGET':
	      return INCORRECT_LINK_TARGET;

	    case 'INCOMPATIBLE_CHILD':
	      return INCOMPATIBLE_CHILD;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _ErrorCode = __webpack_require__(8);
	
	var _ErrorCode2 = _interopRequireDefault(_ErrorCode);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ErrorHandler = function ErrorHandler(editor) {
	  return {
	    showMsg: function showMsg(errorCode, params) {
	      var msg = '';
	
	      switch (errorCode) {
	        case _get__('ErrorCode').NODE_NOT_EXISTS:
	          msg = 'Node of type ' + params.type + ' is not defined.';
	          break;
	        case _get__('ErrorCode').CLASS_NOT_DEFINED:
	          msg = 'Class ' + params.class + ' is not defined.';
	          break;
	        case _get__('ErrorCode').CONNECTION_TO_ITSELF:
	          msg = 'Cannot connect node "' + params.node + '" to itself.';
	          break;
	        case _get__('ErrorCode').IMPROPER_CONNECTION:
	          msg = 'Cannot create connection of type "' + params.type + '"' + (' from node id "' + params.node1 + '" to node id "' + params.node2 + '".');
	          break;
	        case _get__('ErrorCode').OBJECT_NOT_FOUND:
	          msg = 'Cannot find object with id "' + params.id + '"';
	          break;
	        case _get__('ErrorCode').MANDATORY_PARAM:
	          msg = 'Parameter "' + params.param + '" was expected but instead got undefined.';
	          break;
	        case _get__('ErrorCode').INCORRECT_TYPE:
	          msg = 'Wrong type of argument. Expected "' + params.type + '"';
	          break;
	        case _get__('ErrorCode').INCORRECT_PARENT_NODE:
	          msg = 'Node of type "' + params.child + '" can be added only to "' + params.parent + '" node.';
	          break;
	        case _get__('ErrorCode').INCORRECT_LINK_TARGET:
	          msg = 'Cannot create link connection to null node.';
	          break;
	        case _get__('ErrorCode').INCOMPATIBLE_CHILD:
	          msg = 'Cannot add child of type "' + params.child + '" into parent of type "' + params.parent + '".';
	          break;
	        default:
	          msg = 'Unknown error code passed: ' + errorCode;
	      }
	      if (editor) {
	        editor.showMsg(msg);
	      } else {
	        throw new Error(msg);
	        // add warning mode?
	      }
	    }
	  };
	};
	
	module.exports = _get__('ErrorHandler');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'ErrorCode':
	      return _ErrorCode2.default;

	    case 'ErrorHandler':
	      return ErrorHandler;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _BaseNode = __webpack_require__(1);
	
	var _BaseNode2 = _interopRequireDefault(_BaseNode);
	
	var _Plug = __webpack_require__(3);
	
	var _Plug2 = _interopRequireDefault(_Plug);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var AnswerNode = function () {
	  // Weak maps are new feature to JavaScript. We can store private
	  // object properties in key/value pairs using our instance as the key,
	  // and our class can capture those key/value maps in a closure.
	  var _text = new WeakMap();
	
	  return function (_get__2) {
	    _inherits(AnswerNode, _get__2);
	
	    function AnswerNode(nodePool, data) {
	      _classCallCheck(this, AnswerNode);
	
	      var _this = _possibleConstructorReturn(this, (AnswerNode.__proto__ || Object.getPrototypeOf(AnswerNode)).call(this, nodePool, data));
	
	      _text.set(_this, data && data.text ? data.text : '');
	      return _this;
	    }
	
	    _createClass(AnswerNode, [{
	      key: '_init',
	      value: function _init() {
	        _get(AnswerNode.prototype.__proto__ || Object.getPrototypeOf(AnswerNode.prototype), '_init', this).call(this);
	        this.cm.addConnector(_get__('Plug').GOTO, 1);
	      }
	    }, {
	      key: 'getData',
	      value: function getData() {
	        var data = _get(AnswerNode.prototype.__proto__ || Object.getPrototypeOf(AnswerNode.prototype), 'getData', this).call(this);
	
	        data.text = this.getText();
	        return data;
	      }
	    }, {
	      key: 'setText',
	      value: function setText(value) {
	        _text.set(this, value);
	      }
	    }, {
	      key: 'getText',
	      value: function getText() {
	        return _text.get(this);
	      }
	    }, {
	      key: 'getTalk',
	      value: function getTalk() {
	        return this.getWires(_get__('Plug').GOTO)[0];
	      }
	    }, {
	      key: 'dispose',
	      value: function dispose() {
	        // console.log('dispose from AnswerNode');
	        _text.delete(this);
	        _get(AnswerNode.prototype.__proto__ || Object.getPrototypeOf(AnswerNode.prototype), 'dispose', this).call(this);
	      }
	    }]);
	
	    return AnswerNode;
	  }(_get__('BaseNode'));
	}();
	
	module.exports = _get__('AnswerNode');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'Plug':
	      return _Plug2.default;

	    case 'BaseNode':
	      return _BaseNode2.default;

	    case 'AnswerNode':
	      return AnswerNode;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _CompoundNode = __webpack_require__(7);
	
	var _CompoundNode2 = _interopRequireDefault(_CompoundNode);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var DialogNode = function () {
	
	  var _start = new WeakMap();
	
	  return function (_get__2) {
	    _inherits(DialogNode, _get__2);
	
	    function DialogNode(nodePool, data) {
	      _classCallCheck(this, DialogNode);
	
	      var _this = _possibleConstructorReturn(this, (DialogNode.__proto__ || Object.getPrototypeOf(DialogNode)).call(this, nodePool, data));
	
	      _start.set(_this, data && data.startTalk ? data.startTalk : '');
	      return _this;
	    }
	
	    _createClass(DialogNode, [{
	      key: 'getData',
	      value: function getData() {
	        var data = _get(DialogNode.prototype.__proto__ || Object.getPrototypeOf(DialogNode.prototype), 'getData', this).call(this);
	
	        data.startTalk = this.getStartTalk();
	        return data;
	      }
	    }, {
	      key: 'canAddChild',
	      value: function canAddChild(type) {
	        return type === 'TalkNode';
	      }
	    }, {
	      key: 'addChild',
	      value: function addChild(childId) {
	        _get(DialogNode.prototype.__proto__ || Object.getPrototypeOf(DialogNode.prototype), 'addChild', this).call(this, childId);
	        var children = this.getChildren();
	
	        if (children.length === 1) this.setStartTalk(childId);
	      }
	    }, {
	      key: 'removeChild',
	      value: function removeChild(index) {
	        var child = this.getChild(index);
	
	        if (child === this.getStartTalk()) this.setStartTalk('');
	        _get(DialogNode.prototype.__proto__ || Object.getPrototypeOf(DialogNode.prototype), 'removeChild', this).call(this, index);
	      }
	    }, {
	      key: 'setStartTalk',
	      value: function setStartTalk(talkId) {
	        // should only add talk nodes from internal children list
	        var children = this.getChildren();
	        var canAdd = children.filter(function (child) {
	          return child === talkId;
	        })[0] !== undefined;
	
	        if (canAdd || talkId === '') _start.set(this, talkId);
	      }
	    }, {
	      key: 'getStartTalk',
	      value: function getStartTalk() {
	        return _start.get(this);
	      }
	    }, {
	      key: 'dispose',
	      value: function dispose() {
	        // console.log('dispose from DialogNode');
	        _start.delete(this);
	        _get(DialogNode.prototype.__proto__ || Object.getPrototypeOf(DialogNode.prototype), 'dispose', this).call(this);
	      }
	    }]);
	
	    return DialogNode;
	  }(_get__('CompoundNode'));
	}();
	
	module.exports = _get__('DialogNode');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'CompoundNode':
	      return _CompoundNode2.default;

	    case 'DialogNode':
	      return DialogNode;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 12 */
/***/ function(module, exports) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var DialogWalker = function () {
	  var _currTalk = new WeakMap();
	  var _rpgs = new WeakMap();
	  var _dialog = new WeakMap();
	
	  return function () {
	    function DialogWalker(rpgs) {
	      _classCallCheck(this, DialogWalker);
	
	      if (!(rpgs && rpgs.findNode)) {
	        throw new Error('RPGSystem instance not passed to constructor.');
	      }
	      _rpgs.set(this, rpgs);
	      _dialog.set(this, null);
	      _currTalk.set(this, null);
	    }
	
	    _createClass(DialogWalker, [{
	      key: 'setDialog',
	      value: function setDialog(dialogId) {
	        var dialog = _rpgs.get(this).findNode(dialogId);
	
	        if (dialog === null || !dialog.getStartTalk) {
	          throw new Error('DialogNode with the id "' + dialogId + '" does not exists.');
	        }
	        _dialog.set(this, dialog);
	        this.reset();
	      }
	    }, {
	      key: 'setTalk',
	      value: function setTalk(talkId) {
	        var talk = _rpgs.get(this).findNode(talkId);
	
	        if (talk === null) {
	          throw new Error('TalkNode with the id "' + talkId + '" does not exists.');
	        }
	        _currTalk.set(this, talk);
	      }
	    }, {
	      key: 'getConversation',
	      value: function getConversation() {
	        var _this = this;
	
	        var conversation = {};
	        var currTalk = _currTalk.get(this);
	        var children = currTalk ? currTalk.getChildren() : [];
	
	        conversation.text = currTalk ? currTalk.getText() : '';
	        conversation.options = children.map(function (answerId) {
	          var answer = _rpgs.get(_this).findNode(answerId);
	
	          return {
	            id: answer.getId(),
	            text: answer.getText(),
	            active: answer.isActive(),
	            enabled: answer.isVisible()
	          };
	        });
	        return conversation;
	      }
	
	      // should return boolean that indicates if there is next talk
	
	    }, {
	      key: 'selectOption',
	      value: function selectOption(id) {
	        var children = _currTalk.get(this).getChildren();
	        var answerId = children.filter(function (currId, index, array) {
	          return currId === id;
	        });
	
	        if (answerId[0] !== undefined) {
	          var answerNode = _rpgs.get(this).findNode(answerId[0]);
	          var talkId = void 0;
	
	          if (answerNode !== null) {
	            talkId = answerNode.getTalk();
	            if (talkId !== undefined) {
	              this.setTalk(talkId);
	              return true;
	            }
	          }
	        }
	        return false;
	      }
	    }, {
	      key: 'reset',
	      value: function reset() {
	        var dialog = _dialog.get(this);
	
	        if (dialog !== null) {
	          this.setTalk(dialog.getStartTalk());
	        }
	      }
	    }]);
	
	    return DialogWalker;
	  }();
	}();
	
	module.exports = _get__('DialogWalker');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'DialogWalker':
	      return DialogWalker;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _CompoundNode = __webpack_require__(7);
	
	var _CompoundNode2 = _interopRequireDefault(_CompoundNode);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TalkNode = function () {
	
	  var _text = new WeakMap();
	
	  return function (_get__2) {
	    _inherits(TalkNode, _get__2);
	
	    function TalkNode(nodePool, data) {
	      _classCallCheck(this, TalkNode);
	
	      var _this = _possibleConstructorReturn(this, (TalkNode.__proto__ || Object.getPrototypeOf(TalkNode)).call(this, nodePool, data));
	
	      _text.set(_this, data && data.text ? data.text : '');
	      return _this;
	    }
	
	    _createClass(TalkNode, [{
	      key: 'getData',
	      value: function getData() {
	        var data = _get(TalkNode.prototype.__proto__ || Object.getPrototypeOf(TalkNode.prototype), 'getData', this).call(this);
	
	        data.text = this.getText();
	        return data;
	      }
	    }, {
	      key: 'setText',
	      value: function setText(value) {
	        _text.set(this, value);
	      }
	    }, {
	      key: 'getText',
	      value: function getText() {
	        return _text.get(this);
	      }
	    }, {
	      key: 'canAddChild',
	      value: function canAddChild(type) {
	        return type === 'AnswerNode';
	      }
	    }, {
	      key: 'canBeWiredTo',
	      value: function canBeWiredTo(type) {
	        return type === 'goto';
	      }
	    }, {
	      key: 'dispose',
	      value: function dispose() {
	        // console.log('dispose from TalkNode');
	        _text.delete(this);
	        _get(TalkNode.prototype.__proto__ || Object.getPrototypeOf(TalkNode.prototype), 'dispose', this).call(this);
	      }
	    }]);
	
	    return TalkNode;
	  }(_get__('CompoundNode'));
	}();
	
	module.exports = _get__('TalkNode');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'CompoundNode':
	      return _CompoundNode2.default;

	    case 'TalkNode':
	      return TalkNode;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Role-Playing Game System
	 * @author Krzysztof Stano (stanosky)
	 * @license MIT license
	 * @link https://github.com/stanosky/rpgs
	 * @version 1.0.0rc
	 **/
	
	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _ErrorHandler = __webpack_require__(9);
	
	var _ErrorHandler2 = _interopRequireDefault(_ErrorHandler);
	
	var _NodePool = __webpack_require__(15);
	
	var _NodePool2 = _interopRequireDefault(_NodePool);
	
	var _NodeFactory = __webpack_require__(16);
	
	var _NodeFactory2 = _interopRequireDefault(_NodeFactory);
	
	var _NodeCreator = __webpack_require__(17);
	
	var _NodeCreator2 = _interopRequireDefault(_NodeCreator);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var RPGSystem = function RPGSystem(data, editor) {
	
	  var _data = data || '[]';
	  var _editor = editor || null;
	  var _errorHandler = new (_get__('ErrorHandler'))(_editor);
	  var _nodePool = new (_get__('NodePool'))(_errorHandler);
	  var _nodeFactory = new (_get__('NodeFactory'))(_nodePool, _errorHandler);
	  var _nodeCreator = new (_get__('NodeCreator'))(_nodePool, _nodeFactory, _errorHandler);
	
	  JSON.parse(_data).map(function (d) {
	    _nodePool.addNode(_nodeFactory.createNode(d));
	  });
	
	  return {
	    createNode: _nodeFactory.createNode,
	
	    addDialog: _nodeCreator.addDialog,
	    addTalk: _nodeCreator.addTalk,
	    addAnswer: _nodeCreator.addAnswer,
	    addWire: _nodeCreator.addWire,
	    addNode: _nodeCreator.addNode,
	
	    findNode: _nodePool.findNode,
	    removeNode: _nodePool.removeNode,
	    getNodes: _nodePool.getNodes,
	
	    serialize: _nodePool.serialize,
	    toString: _nodePool.serialize // it is just alias of serialize
	  };
	};
	
	module.exports = _get__('RPGSystem');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'ErrorHandler':
	      return _ErrorHandler2.default;

	    case 'NodePool':
	      return _NodePool2.default;

	    case 'NodeFactory':
	      return _NodeFactory2.default;

	    case 'NodeCreator':
	      return _NodeCreator2.default;

	    case 'RPGSystem':
	      return RPGSystem;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _Utils = __webpack_require__(2);
	
	var _Utils2 = _interopRequireDefault(_Utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import ErrorCode from './core/ErrorCode';
	
	var NodePool = function NodePool(errorHandler) {
	  // const _errorHandler = errorHandler;
	  var _objectPool = [];
	
	  function _findNode(nodeId) {
	    var i;
	
	    for (i = 0; i < _objectPool.length; i++) {
	      if (_objectPool[i].getId() === nodeId) return _objectPool[i];
	    }
	    return null;
	  }
	
	  function _addNode(node) {
	    if (!node.getId) return; // _errorHandler.showMsg();
	    _objectPool.push(node);
	  }
	
	  function _removeNode(id) {
	    var index = _get__('Utils').getIndexById(_objectPool, id);
	    var isNodeFound = index > -1;
	
	    if (isNodeFound) {
	      var node = _objectPool.splice(index, 1)[0];
	
	      node.dispose();
	    }
	    return isNodeFound;
	  }
	
	  function _getNodesByClass(className) {
	    return _objectPool.filter(function (node) {
	      return node.getData().class === className;
	      // return node.constructor.name === className;
	    });
	  }
	
	  function _getNodes() {
	    var className = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	
	    return className === '' ? _objectPool.slice() : _getNodesByClass(className);
	  }
	
	  function _serialize() {
	    var data = _objectPool.map(function (obj) {
	      return obj.getData ? obj.getData() : obj;
	    });
	
	    return JSON.stringify(data);
	  }
	
	  return {
	    findNode: _findNode,
	    addNode: _addNode,
	    removeNode: _removeNode,
	    getNodes: _getNodes,
	    serialize: _serialize
	  };
	};
	
	module.exports = _get__('NodePool');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'Utils':
	      return _Utils2.default;

	    case 'NodePool':
	      return NodePool;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _ErrorCode = __webpack_require__(8);
	
	var _ErrorCode2 = _interopRequireDefault(_ErrorCode);
	
	var _BaseNode = __webpack_require__(1);
	
	var _BaseNode2 = _interopRequireDefault(_BaseNode);
	
	var _AnswerNode = __webpack_require__(10);
	
	var _AnswerNode2 = _interopRequireDefault(_AnswerNode);
	
	var _DialogNode = __webpack_require__(11);
	
	var _DialogNode2 = _interopRequireDefault(_DialogNode);
	
	var _TalkNode = __webpack_require__(13);
	
	var _TalkNode2 = _interopRequireDefault(_TalkNode);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var NodeFactory = function NodeFactory(nodePool, errorHandler) {
	
	  var _nodePool = nodePool;
	  var _errorHandler = errorHandler;
	
	  function _createNode(data) {
	    var className = data.class;
	
	    // console.log('_createNode',_nodePool);
	    switch (className) {
	      case 'BaseNode':
	        return new (_get__('BaseNode'))(_nodePool, data);
	      case 'AnswerNode':
	        return new (_get__('AnswerNode'))(_nodePool, data);
	      case 'DialogNode':
	        return new (_get__('DialogNode'))(_nodePool, data);
	      case 'TalkNode':
	        return new (_get__('TalkNode'))(_nodePool, data);
	      default:
	        _errorHandler.showMsg(_get__('ErrorCode').CLASS_NOT_DEFINED, { class: className });
	        return null;
	    }
	  }
	
	  return {
	    createNode: _createNode
	  };
	};
	
	module.exports = _get__('NodeFactory');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'BaseNode':
	      return _BaseNode2.default;

	    case 'AnswerNode':
	      return _AnswerNode2.default;

	    case 'DialogNode':
	      return _DialogNode2.default;

	    case 'TalkNode':
	      return _TalkNode2.default;

	    case 'ErrorCode':
	      return _ErrorCode2.default;

	    case 'NodeFactory':
	      return NodeFactory;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _ErrorCode = __webpack_require__(8);
	
	var _ErrorCode2 = _interopRequireDefault(_ErrorCode);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var NodeCreator = function NodeCreator(nodePool, nodeFactory, errorHandler) {
	  var _nodePool = nodePool,
	      _nodeFactory = nodeFactory,
	      _errorHandler = errorHandler;
	
	  var _lastChild = null,
	      _parentHistory = [],
	      _tempWires = [];
	
	  function _setConnection(type, nodeId1, nodeId2) {
	    if (nodeId1 === nodeId2) {
	      _errorHandler.showMsg(_get__('ErrorCode').CONNECTION_TO_ITSELF, { node: nodeId1 });
	    }
	
	    var node1 = _nodePool.findNode(nodeId1);
	    var node2 = _nodePool.findNode(nodeId2);
	
	    if (node2 === null) {
	      _tempWires.push({ type: type, targetNode: nodeId1, referenceNode: nodeId2 });
	      return;
	    }
	
	    if (node1.canRecieveWire(type) && node2.canBeWiredTo(type)) {
	      node1.addWire(type, node2.getId());
	    } else {
	      _errorHandler.showMsg(_get__('ErrorCode').IMPROPER_CONNECTION, {
	        type: type,
	        node1: nodeId1,
	        node2: nodeId2
	      });
	    }
	  }
	
	  function _getWaitingWiresForNode(nodeId) {
	    var wires = [],
	        i = void 0;
	
	    for (i = _tempWires.length - 1; i >= 0; i--) {
	      if (_tempWires[i].referenceNode === nodeId) {
	        wires.push(_tempWires.splice(i, 1)[0]);
	      }
	    }
	    return wires;
	  }
	
	  /**
	   * This method helps in the creation of nodes. Its focus on proper
	   * placement of nodes in tree.
	   * @param  {object} params  Parameters of created node.
	   * @param  {boolean} asChild Determines if node should be added as child
	   * of another node or as an independent node.
	   */
	  function _nodeCreator(params, asChild) {
	    function createChildNode(nodeParams) {
	      // We create a new node, and then set as the last child.
	      _lastChild = _nodeFactory.createNode(nodeParams);
	      // Then we add our freshly created node to its parent.
	      _parentHistory[0].addChild(_lastChild.getId());
	      // Finally new node is added to main storage object.
	      _nodePool.addNode(_lastChild);
	    }
	    // Test if node should be added as child or parent.
	    if (asChild) {
	      // If last added child was not null then we must check additional conditions.
	      if (_lastChild !== null) {
	        // If constructor name of previous child node, is equal to name of class,
	        // whose we try to create, it means node should be added to current parent.
	        if (_lastChild.getData().class === params.class) {
	          createChildNode(params);
	          // If names of constructors not match, then we must check if new node
	          // can be added as child to our previous child.
	        } else if (_lastChild.canAddChild(params.class)) {
	          _parentHistory.unshift(_lastChild);
	          createChildNode(params);
	          // Finally if previous conditions are false we try go back to previous
	          // parent node.
	        } else {
	          _lastChild = _parentHistory.shift() || null;
	          _nodeCreator(params, asChild);
	        }
	        // If last child is null, then we check if node can be added to current
	        // parent node.
	      } else if (_parentHistory.length > 0 && _parentHistory[0].canAddChild(params.class)) {
	        createChildNode(params);
	        // If last child and last parent is equal to null, then new child node
	        // cant be added, so we throw error.
	      } else {
	        _errorHandler.showMsg(_get__('ErrorCode').INCOMPATIBLE_CHILD, {
	          child: params.class,
	          parent: _parentHistory.length > 0 ? _parentHistory[0].getData().class : 'null'
	        });
	      }
	    } else {
	      // If node is added as parent, then last child is set to null
	      // and parent history is cleared.
	      _lastChild = null;
	      _parentHistory.length = 0;
	      // After that, new node is created.
	      var node = _nodeFactory.createNode(params);
	
	      _parentHistory = [node];
	      _nodePool.addNode(node);
	    }
	
	    _getWaitingWiresForNode(params.uuid).map(function (wire) {
	      _setConnection(wire.type, wire.targetNode, wire.referenceNode);
	    });
	  }
	
	  function _addNode(className) {
	    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    var _params = params;
	
	    _params.class = className;
	    _nodeCreator(_params, false);
	    return this;
	  }
	
	  function _addDialog() {
	    var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _errorHandler.showMsg(_get__('ErrorCode').MANDATORY_PARAM, { param: 'id' });
	
	    var params = {
	      uuid: id,
	      class: 'DialogNode'
	    };
	
	    _nodeCreator(params, false);
	    return this;
	  }
	
	  function _addTalk() {
	    var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _errorHandler.showMsg(_get__('ErrorCode').MANDATORY_PARAM, { param: 'id' });
	    var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
	
	    var params = {
	      uuid: id,
	      text: text,
	      class: 'TalkNode'
	    };
	
	    _nodeCreator(params, true);
	    return this;
	  }
	
	  function _addAnswer() {
	    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	
	    var params = {
	      text: text,
	      class: 'AnswerNode'
	    };
	
	    _nodeCreator(params, true);
	    return this;
	  }
	
	  function _addWire(type, referenceNodeId) {
	    var targetNode = _lastChild;
	
	    if (targetNode === null && _parentHistory.length > 0) {
	      targetNode = _parentHistory[0];
	    } else {
	      /* _errorHandler.showMsg(ErrorCode.INCOMPATIBLE_CHILD,{
	        child:className,
	        parent: _parentHistory.length > 0
	              ? _parentHistory[0].constructor.name
	              : 'null'
	      });*/
	    }
	    _setConnection(type, targetNode.getId(), referenceNodeId);
	    return this;
	  }
	
	  return {
	    addNode: _addNode,
	    addDialog: _addDialog,
	    addTalk: _addTalk,
	    addAnswer: _addAnswer,
	    addWire: _addWire
	  };
	};
	
	module.exports = _get__('NodeCreator');
	
	var _RewiredData__ = Object.create(null);

	var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
	var _RewireAPI__ = {};

	(function () {
	  function addPropertyToAPIObject(name, value) {
	    Object.defineProperty(_RewireAPI__, name, {
	      value: value,
	      enumerable: false,
	      configurable: true
	    });
	  }

	  addPropertyToAPIObject('__get__', _get__);
	  addPropertyToAPIObject('__GetDependency__', _get__);
	  addPropertyToAPIObject('__Rewire__', _set__);
	  addPropertyToAPIObject('__set__', _set__);
	  addPropertyToAPIObject('__reset__', _reset__);
	  addPropertyToAPIObject('__ResetDependency__', _reset__);
	  addPropertyToAPIObject('__with__', _with__);
	})();

	function _get__(variableName) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _get_original__(variableName);
	  } else {
	    var value = _RewiredData__[variableName];

	    if (value === INTENTIONAL_UNDEFINED) {
	      return undefined;
	    } else {
	      return value;
	    }
	  }
	}

	function _get_original__(variableName) {
	  switch (variableName) {
	    case 'ErrorCode':
	      return _ErrorCode2.default;

	    case 'NodeCreator':
	      return NodeCreator;
	  }

	  return undefined;
	}

	function _assign__(variableName, value) {
	  if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
	    return _set_original__(variableName, value);
	  } else {
	    return _RewiredData__[variableName] = value;
	  }
	}

	function _set_original__(variableName, _value) {
	  switch (variableName) {}

	  return undefined;
	}

	function _update_operation__(operation, variableName, prefix) {
	  var oldValue = _get__(variableName);

	  var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

	  _assign__(variableName, newValue);

	  return prefix ? newValue : oldValue;
	}

	function _set__(variableName, value) {
	  if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
	    Object.keys(variableName).forEach(function (name) {
	      _RewiredData__[name] = variableName[name];
	    });
	  } else {
	    if (value === undefined) {
	      _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
	    } else {
	      _RewiredData__[variableName] = value;
	    }

	    return function () {
	      _reset__(variableName);
	    };
	  }
	}

	function _reset__(variableName) {
	  delete _RewiredData__[variableName];
	}

	function _with__(object) {
	  var rewiredVariableNames = Object.keys(object);
	  var previousValues = {};

	  function reset() {
	    rewiredVariableNames.forEach(function (variableName) {
	      _RewiredData__[variableName] = previousValues[variableName];
	    });
	  }

	  return function (callback) {
	    rewiredVariableNames.forEach(function (variableName) {
	      previousValues[variableName] = _RewiredData__[variableName];
	      _RewiredData__[variableName] = object[variableName];
	    });
	    var result = callback();

	    if (!!result && typeof result.then == 'function') {
	      result.then(reset).catch(reset);
	    } else {
	      reset();
	    }

	    return result;
	  };
	}

	var _typeOfOriginalExport = _typeof(module.exports);

	function addNonEnumerableProperty(name, value) {
	  Object.defineProperty(module.exports, name, {
	    value: value,
	    enumerable: false,
	    configurable: true
	  });
	}

	if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(module.exports)) {
	  addNonEnumerableProperty('__get__', _get__);
	  addNonEnumerableProperty('__GetDependency__', _get__);
	  addNonEnumerableProperty('__Rewire__', _set__);
	  addNonEnumerableProperty('__set__', _set__);
	  addNonEnumerableProperty('__reset__', _reset__);
	  addNonEnumerableProperty('__ResetDependency__', _reset__);
	  addNonEnumerableProperty('__with__', _with__);
	  addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
	}

/***/ }
/******/ ])
});
;
//# sourceMappingURL=rpgs.min.js.map