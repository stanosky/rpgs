/*!
 * rpgs
 * RPG System
 * https://github.com/stanosky/rpgs
 * @author Krzysztof Stano
 * @version 1.0.0
 * Copyright 2016. MIT licensed.
 */
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

const RPGObject = require('./RPGObject.js');

let NPC = function () {
  let _name = '';
  let _dialog = null;
  let _inventory = null;
  let _npc = {};
  _npc.__proto__ = RPGObject();

  _npc.setName = function (value) {
    _name = value;
  };

  _npc.getName = function () {
    return _name;
  };

  _npc.setDialog = function (dialog) {
    _dialog = dialog;
  };

  _npc.getDialog = function () {
    return _dialog;
  };

  _npc.setInventory = function (inventory) {
    _inventory = inventory;
  };

  _npc.getInventory = function () {
    return _inventory;
  };

  /*_npc.toString = function() {
    return 'NPC name: '+this.getName()+', id: ' + this.getId();
  };*/
  return _npc;
};
module.exports = NPC;

},{"./RPGObject.js":2}],2:[function(require,module,exports){
"use strict";

const Utils = require('./Utils.js');

let RPGObject = function () {
  let _id = Utils.getUniqueId();
  let _getId = function () {
    return _id;
  };
  return {
    getId: _getId
  };
};

module.exports = RPGObject;

},{"./Utils.js":3}],3:[function(require,module,exports){
"use strict";

let getUniqueId = function () {
   var id = 0; // This is the private persistent value
   // The outer function returns a nested function that has access
   // to the persistent value.  It is this nested function we're storing
   // in the variable uniqueID above.
   return function () {
      return id++;
   }; // Return and increment
}(); // Invoke the outer function after defining it.

exports.getUniqueId = getUniqueId;

},{}],4:[function(require,module,exports){
"use strict";

(function ($, window, document, undefined) {
  const RPGObject = require('./RPGObject.js');
  const NPC = require('./NPC.js');
  $(function () {
    var obj1 = new RPGObject();
    var obj2 = new RPGObject();
    console.log(obj1.getId(), obj2.getId(), obj1.getId(), obj2.getId());

    var npc1 = new NPC();
    var npc2 = new NPC();
    npc1.setName('Adam');
    npc2.setName('Eva');
    console.log(npc1.toString(), npc2.toString());
    console.log(npc1 instanceof RPGObject);
  });
})(jQuery, window, document);

},{"./NPC.js":1,"./RPGObject.js":2}]},{},[4])


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvTlBDLmpzIiwic3JjL2pzL1JQR09iamVjdC5qcyIsInNyYy9qcy9VdGlscy5qcyIsInNyYy9qcy9zY3JpcHRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUNBQTs7QUFDQSxNQUFNLFlBQVksUUFBUSxnQkFBUixDQUFsQjs7QUFFQSxJQUFJLE1BQU0sWUFBWTtBQUNwQixNQUFJLFFBQVEsRUFBWjtBQUNBLE1BQUksVUFBVSxJQUFkO0FBQ0EsTUFBSSxhQUFhLElBQWpCO0FBQ0EsTUFBSSxPQUFPLEVBQVg7QUFDQSxPQUFLLFNBQUwsR0FBaUIsV0FBakI7O0FBRUEsT0FBSyxPQUFMLEdBQWUsVUFBUyxLQUFULEVBQWdCO0FBQzdCLFlBQVEsS0FBUjtBQUNELEdBRkQ7O0FBSUEsT0FBSyxPQUFMLEdBQWUsWUFBVztBQUN4QixXQUFPLEtBQVA7QUFDRCxHQUZEOztBQUlBLE9BQUssU0FBTCxHQUFpQixVQUFTLE1BQVQsRUFBaUI7QUFDaEMsY0FBVSxNQUFWO0FBQ0QsR0FGRDs7QUFJQSxPQUFLLFNBQUwsR0FBaUIsWUFBVztBQUMxQixXQUFPLE9BQVA7QUFDRCxHQUZEOztBQUlBLE9BQUssWUFBTCxHQUFvQixVQUFTLFNBQVQsRUFBb0I7QUFDdEMsaUJBQWEsU0FBYjtBQUNELEdBRkQ7O0FBSUEsT0FBSyxZQUFMLEdBQW9CLFlBQVc7QUFDN0IsV0FBTyxVQUFQO0FBQ0QsR0FGRDs7QUFJQTs7O0FBR0EsU0FBTyxJQUFQO0FBQ0QsQ0FuQ0Q7QUFvQ0EsT0FBTyxPQUFQLEdBQWlCLEdBQWpCOzs7QUN2Q0E7O0FBQ0EsTUFBTSxRQUFRLFFBQVEsWUFBUixDQUFkOztBQUVBLElBQUksWUFBWSxZQUFXO0FBQ3pCLE1BQUksTUFBTSxNQUFNLFdBQU4sRUFBVjtBQUNBLE1BQUksU0FBUyxZQUFXO0FBQ3RCLFdBQU8sR0FBUDtBQUNELEdBRkQ7QUFHQSxTQUFPO0FBQ0wsV0FBTztBQURGLEdBQVA7QUFHRCxDQVJEOztBQVVBLE9BQU8sT0FBUCxHQUFpQixTQUFqQjs7O0FDYkE7O0FBQ0EsSUFBSSxjQUFlLFlBQVc7QUFDM0IsT0FBSSxLQUFLLENBQVQsQ0FEMkIsQ0FDZjtBQUNaO0FBQ0E7QUFDQTtBQUNBLFVBQU8sWUFBVztBQUFFLGFBQU8sSUFBUDtBQUFjLElBQWxDLENBTDJCLENBS1U7QUFDdkMsQ0FOaUIsRUFBbEIsRUFNTTs7QUFFTixRQUFRLFdBQVIsR0FBc0IsV0FBdEI7OztBQ1RFOztBQUNGLENBQUMsVUFBVSxDQUFWLEVBQWEsTUFBYixFQUFxQixRQUFyQixFQUErQixTQUEvQixFQUEwQztBQUN6QyxRQUFNLFlBQVksUUFBUSxnQkFBUixDQUFsQjtBQUNBLFFBQU0sTUFBTSxRQUFRLFVBQVIsQ0FBWjtBQUNBLElBQUUsWUFBWTtBQUNaLFFBQUksT0FBTyxJQUFJLFNBQUosRUFBWDtBQUNBLFFBQUksT0FBTyxJQUFJLFNBQUosRUFBWDtBQUNBLFlBQVEsR0FBUixDQUFZLEtBQUssS0FBTCxFQUFaLEVBQXlCLEtBQUssS0FBTCxFQUF6QixFQUFzQyxLQUFLLEtBQUwsRUFBdEMsRUFBbUQsS0FBSyxLQUFMLEVBQW5EOztBQUVBLFFBQUksT0FBTyxJQUFJLEdBQUosRUFBWDtBQUNBLFFBQUksT0FBTyxJQUFJLEdBQUosRUFBWDtBQUNBLFNBQUssT0FBTCxDQUFhLE1BQWI7QUFDQSxTQUFLLE9BQUwsQ0FBYSxLQUFiO0FBQ0EsWUFBUSxHQUFSLENBQVksS0FBSyxRQUFMLEVBQVosRUFBNEIsS0FBSyxRQUFMLEVBQTVCO0FBQ0EsWUFBUSxHQUFSLENBQVksZ0JBQWdCLFNBQTVCO0FBQ0QsR0FYRDtBQWFELENBaEJELEVBZ0JHLE1BaEJILEVBZ0JXLE1BaEJYLEVBZ0JtQixRQWhCbkIiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIlwidXNlIHN0cmljdFwiO1xyXG5jb25zdCBSUEdPYmplY3QgPSByZXF1aXJlKCcuL1JQR09iamVjdC5qcycpO1xyXG5cclxubGV0IE5QQyA9IGZ1bmN0aW9uICgpIHtcclxuICBsZXQgX25hbWUgPSAnJztcclxuICBsZXQgX2RpYWxvZyA9IG51bGw7XHJcbiAgbGV0IF9pbnZlbnRvcnkgPSBudWxsO1xyXG4gIGxldCBfbnBjID0ge307XHJcbiAgX25wYy5fX3Byb3RvX18gPSBSUEdPYmplY3QoKTtcclxuXHJcbiAgX25wYy5zZXROYW1lID0gZnVuY3Rpb24odmFsdWUpIHtcclxuICAgIF9uYW1lID0gdmFsdWU7XHJcbiAgfTtcclxuXHJcbiAgX25wYy5nZXROYW1lID0gZnVuY3Rpb24oKSB7XHJcbiAgICByZXR1cm4gX25hbWU7XHJcbiAgfTtcclxuXHJcbiAgX25wYy5zZXREaWFsb2cgPSBmdW5jdGlvbihkaWFsb2cpIHtcclxuICAgIF9kaWFsb2cgPSBkaWFsb2c7XHJcbiAgfTtcclxuXHJcbiAgX25wYy5nZXREaWFsb2cgPSBmdW5jdGlvbigpIHtcclxuICAgIHJldHVybiBfZGlhbG9nO1xyXG4gIH07XHJcblxyXG4gIF9ucGMuc2V0SW52ZW50b3J5ID0gZnVuY3Rpb24oaW52ZW50b3J5KSB7XHJcbiAgICBfaW52ZW50b3J5ID0gaW52ZW50b3J5O1xyXG4gIH07XHJcblxyXG4gIF9ucGMuZ2V0SW52ZW50b3J5ID0gZnVuY3Rpb24oKSB7XHJcbiAgICByZXR1cm4gX2ludmVudG9yeTtcclxuICB9O1xyXG5cclxuICAvKl9ucGMudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcclxuICAgIHJldHVybiAnTlBDIG5hbWU6ICcrdGhpcy5nZXROYW1lKCkrJywgaWQ6ICcgKyB0aGlzLmdldElkKCk7XHJcbiAgfTsqL1xyXG4gIHJldHVybiBfbnBjO1xyXG59O1xyXG5tb2R1bGUuZXhwb3J0cyA9IE5QQztcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbmNvbnN0IFV0aWxzID0gcmVxdWlyZSgnLi9VdGlscy5qcycpO1xyXG5cclxubGV0IFJQR09iamVjdCA9IGZ1bmN0aW9uKCkge1xyXG4gIGxldCBfaWQgPSBVdGlscy5nZXRVbmlxdWVJZCgpO1xyXG4gIGxldCBfZ2V0SWQgPSBmdW5jdGlvbigpIHtcclxuICAgIHJldHVybiBfaWQ7XHJcbiAgfVxyXG4gIHJldHVybiB7XHJcbiAgICBnZXRJZDogX2dldElkXHJcbiAgfTtcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUlBHT2JqZWN0O1xyXG4iLCJcInVzZSBzdHJpY3RcIjtcclxubGV0IGdldFVuaXF1ZUlkID0gKGZ1bmN0aW9uKCkge1xyXG4gICB2YXIgaWQgPSAwOyAvLyBUaGlzIGlzIHRoZSBwcml2YXRlIHBlcnNpc3RlbnQgdmFsdWVcclxuICAgLy8gVGhlIG91dGVyIGZ1bmN0aW9uIHJldHVybnMgYSBuZXN0ZWQgZnVuY3Rpb24gdGhhdCBoYXMgYWNjZXNzXHJcbiAgIC8vIHRvIHRoZSBwZXJzaXN0ZW50IHZhbHVlLiAgSXQgaXMgdGhpcyBuZXN0ZWQgZnVuY3Rpb24gd2UncmUgc3RvcmluZ1xyXG4gICAvLyBpbiB0aGUgdmFyaWFibGUgdW5pcXVlSUQgYWJvdmUuXHJcbiAgIHJldHVybiBmdW5jdGlvbigpIHsgcmV0dXJuIGlkKys7IH07ICAvLyBSZXR1cm4gYW5kIGluY3JlbWVudFxyXG59KSgpOyAvLyBJbnZva2UgdGhlIG91dGVyIGZ1bmN0aW9uIGFmdGVyIGRlZmluaW5nIGl0LlxyXG5cclxuZXhwb3J0cy5nZXRVbmlxdWVJZCA9IGdldFVuaXF1ZUlkO1xyXG4iLCIgIFwidXNlIHN0cmljdFwiO1xyXG4oZnVuY3Rpb24gKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xyXG4gIGNvbnN0IFJQR09iamVjdCA9IHJlcXVpcmUoJy4vUlBHT2JqZWN0LmpzJyk7XHJcbiAgY29uc3QgTlBDID0gcmVxdWlyZSgnLi9OUEMuanMnKTtcclxuICAkKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBvYmoxID0gbmV3IFJQR09iamVjdCgpO1xyXG4gICAgdmFyIG9iajIgPSBuZXcgUlBHT2JqZWN0KCk7XHJcbiAgICBjb25zb2xlLmxvZyhvYmoxLmdldElkKCksb2JqMi5nZXRJZCgpLG9iajEuZ2V0SWQoKSxvYmoyLmdldElkKCkpO1xyXG5cclxuICAgIHZhciBucGMxID0gbmV3IE5QQygpO1xyXG4gICAgdmFyIG5wYzIgPSBuZXcgTlBDKCk7XHJcbiAgICBucGMxLnNldE5hbWUoJ0FkYW0nKTtcclxuICAgIG5wYzIuc2V0TmFtZSgnRXZhJyk7XHJcbiAgICBjb25zb2xlLmxvZyhucGMxLnRvU3RyaW5nKCksbnBjMi50b1N0cmluZygpKTtcclxuICAgIGNvbnNvbGUubG9nKG5wYzEgaW5zdGFuY2VvZiBSUEdPYmplY3QpO1xyXG4gIH0pO1xyXG5cclxufSkoalF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KTtcclxuIl19
